{"version":3,"sources":["component/layout/MetaData.js","component/Cart/CheckoutSteps.js","component/Cart/ConfirmOrder.js"],"names":["MetaData","_ref","title","_jsx","Helmet","children","CheckoutSteps","activeStep","steps","label","Typography","icon","LocalShippingIcon","LibraryAddCheckIcon","AccountBalanceIcon","Fragment","Stepper","alternativeLabel","style","boxSizing","map","item","index","Step","active","completed","StepLabel","color","ConfirmOrder","history","shippingInfo","cartItems","useSelector","state","cart","user","subtotal","reduce","acc","quantity","price","shippingCharges","totalPrice","address","city","pinCode","country","_jsxs","className","name","phoneNo","src","image","alt","Link","to","product","onClick","proceedToPayment","data","sessionStorage","setItem","JSON","stringify","window","location","href"],"mappings":"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","file":"static/js/44.61e205fb.chunk.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\n\nconst MetaData = ({ title }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n  );\n};\n\nexport default MetaData;\n","import React, { Fragment } from \"react\";\nimport { Typography, Stepper, StepLabel, Step } from \"@material-ui/core\";\nimport LocalShippingIcon from \"@material-ui/icons/LocalShipping\";\nimport LibraryAddCheckIcon from \"@material-ui/icons/LibraryAddCheck\";\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\nimport \"./CheckoutSteps.css\";\n\nconst CheckoutSteps = ({ activeStep }) => {\n  const steps = [\n    {\n      label: <Typography>Shipping Details</Typography>,\n      icon: <LocalShippingIcon />,\n    },\n    {\n      label: <Typography>Confirm Order</Typography>,\n      icon: <LibraryAddCheckIcon />,\n    },\n    {\n      label: <Typography>Payment</Typography>,\n      icon: <AccountBalanceIcon />,\n    },\n  ];\n\n  const stepStyles = {\n    boxSizing: \"border-box\",\n  };\n\n  return (\n    <Fragment>\n      <Stepper alternativeLabel activeStep={activeStep} style={stepStyles}>\n        {steps.map((item, index) => (\n          <Step\n            key={index}\n            active={activeStep === index ? true : false}\n            completed={activeStep >= index ? true : false}\n          >\n            <StepLabel\n              style={{\n                color: activeStep >= index ? \"tomato\" : \"rgba(0, 0, 0, 0.649)\",\n              }}\n              icon={item.icon}\n            >\n              {item.label}\n            </StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n    </Fragment>\n  );\n};\n\nexport default CheckoutSteps;\n","import React, { Fragment } from \"react\";\nimport CheckoutSteps from \"../Cart/CheckoutSteps\";\nimport { useSelector } from \"react-redux\";\nimport MetaData from \"../layout/MetaData\";\nimport \"./ConfirmOrder.css\";\nimport { Link } from \"react-router-dom\";\nimport { Typography } from \"@material-ui/core\";\n\nconst ConfirmOrder = ({ history }) => {\n  const { shippingInfo, cartItems } = useSelector((state) => state.cart);\n  const { user } = useSelector((state) => state.user);\n\n  const subtotal = cartItems.reduce(\n    (acc, item) => acc + item.quantity * item.price,\n    0\n  );\n\n  const shippingCharges = cartItems.reduce((acc, item) => acc + item.quantity, 0)*30;\n  const totalPrice = subtotal + shippingCharges;\n  const address = `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.state}, ${shippingInfo.pinCode}, ${shippingInfo.country}`;\n\n  const proceedToPayment = () => {\n    const data = {\n      subtotal,\n      shippingCharges,\n      totalPrice,\n    };\n\n    sessionStorage.setItem(\"orderInfo\", JSON.stringify(data));\n    // history.push(\"\");\n    window.location.href = \"/process/payment\"\n  };\n\n  return (\n    <Fragment>\n      <MetaData title=\"Confirm Order\" />\n      <CheckoutSteps activeStep={1} />\n      <div className=\"confirmOrderPage\">\n        <div>\n          <div className=\"confirmshippingArea\">\n            <Typography>Shipping Info</Typography>\n            <div className=\"confirmshippingAreaBox\">\n              <div>\n                <p>Name:</p>\n                <span>{user.name}</span>\n              </div>\n              <div>\n                <p>Phone:</p>\n                <span>{shippingInfo.phoneNo}</span>\n              </div>\n              <div>\n                <p>Address:</p>\n                <span>{address}</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"confirmCartItems\">\n            <Typography>Your Cart Items:</Typography>\n            <div className=\"confirmCartItemsContainer\">\n              {cartItems &&\n                cartItems.map((item) => (\n                  <div key={item.product}>\n                    <img src={item.image} alt=\"Product\" />\n                    <Link to={`/product/${item.product}`}>\n                      {item.name}\n                    </Link>{\" \"}\n                    <span>\n                      {item.quantity} X ${item.price} ={\" \"}\n                      <b>${item.price * item.quantity}</b>\n                    </span>\n                  </div>\n                ))}\n            </div>\n          </div>\n        </div>\n        {/*  */}\n        <div>\n          <div className=\"orderSummary\">\n            <Typography>Order Summery</Typography>\n            <div>\n              <div>\n                <p>Subtotal:</p>\n                <span>${subtotal}</span>\n              </div>\n              <div>\n                <span>\n                 Each item's shipping cost will be $30.\n                </span>\n              </div>\n              <div>\n                <p>Shipping:</p>\n                <span>${shippingCharges}</span>\n              </div>\n              \n            </div>\n\n            <div className=\"orderSummaryTotal\">\n              <p>\n                <b>Total:</b>\n              </p>\n              <span>${totalPrice}</span>\n            </div>\n\n            <button onClick={proceedToPayment}>Proceed To Payment</button>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ConfirmOrder;\n"],"sourceRoot":""}