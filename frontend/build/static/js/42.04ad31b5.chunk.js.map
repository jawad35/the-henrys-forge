{"version":3,"sources":["component/layout/MetaData.js","actions/orderAction.js","component/Cart/CheckoutSteps.js","component/Order/PaypalPayment.js","component/Cart/Payment.js"],"names":["MetaData","title","createDataBaseOrder","order","history","dispatch","a","type","CREATE_ORDER_REQUEST","config","headers","axios","post","data","success","REMOVE_CART_ITEMS","push","CREATE_ORDER_SUCCESS","payload","CREATE_ORDER_FAIL","response","message","myOrders","MY_ORDERS_REQUEST","get","MY_ORDERS_SUCCESS","orders","MY_ORDERS_FAIL","getAllOrders","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","updateOrder","id","status","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_FAIL","deleteOrder","DELETE_ORDER_REQUEST","delete","DELETE_ORDER_SUCCESS","DELETE_ORDER_FAIL","getOrderDetails","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","clearErrors","CLEAR_ERRORS","CheckoutSteps","activeStep","steps","label","icon","alternativeLabel","style","boxSizing","map","item","index","active","completed","color","PaypalPayment","alert","useAlert","useDispatch","orderInfo","JSON","parse","sessionStorage","getItem","useSelector","state","cart","shippingInfo","cartItems","createOrder","fetch","method","body","stringify","amount","subtotal","then","json","onApprove","orderID","console","log","Order","orderItems","itemsPrice","shippingPrice","shippingCharges","totalPrice","paymentInfo","error","actions","layout","Payment","className","position","height"],"mappings":"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","file":"static/js/42.04ad31b5.chunk.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\n\nconst MetaData = ({ title }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n  );\n};\n\nexport default MetaData;\n","import { REMOVE_CART_ITEMS } from \"../constants/cartConstants\";\nimport {\n  CREATE_ORDER_REQUEST,\n  CREATE_ORDER_SUCCESS,\n  CREATE_ORDER_FAIL,\n  MY_ORDERS_REQUEST,\n  MY_ORDERS_SUCCESS,\n  MY_ORDERS_FAIL,\n  ALL_ORDERS_REQUEST,\n  ALL_ORDERS_SUCCESS,\n  ALL_ORDERS_FAIL,\n  UPDATE_ORDER_REQUEST,\n  UPDATE_ORDER_SUCCESS,\n  UPDATE_ORDER_FAIL,\n  DELETE_ORDER_REQUEST,\n  DELETE_ORDER_SUCCESS,\n  DELETE_ORDER_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  CLEAR_ERRORS,\n} from \"../constants/orderConstants\";\n\nimport axios from \"axios\";\nimport { BASE_URL } from \"../globalUrl/Urls\";\n\n// Create Order\nexport const createDataBaseOrder = (order, history) => async (dispatch) => {\n  try {\n    dispatch({ type: CREATE_ORDER_REQUEST });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const { data } = await axios.post(`/api/v1/order/new`, order, config);\n    if (data?.success) {\n      dispatch({\n        type: REMOVE_CART_ITEMS,\n        data: [],\n      });\n      history.push(\"/success\")\n    }\n\n    dispatch({ type: CREATE_ORDER_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: CREATE_ORDER_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// My Orders\nexport const myOrders = () => async (dispatch) => {\n  try {\n    dispatch({ type: MY_ORDERS_REQUEST });\n\n    const { data } = await axios.get(`/api/v1/orders/me`);\n\n    dispatch({ type: MY_ORDERS_SUCCESS, payload: data.orders });\n  } catch (error) {\n    dispatch({\n      type: MY_ORDERS_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Get All Orders (admin)\nexport const getAllOrders = () => async (dispatch) => {\n  try {\n    dispatch({ type: ALL_ORDERS_REQUEST });\n\n    const { data } = await axios.get(`/api/v1/admin/orders`);\n\n    dispatch({ type: ALL_ORDERS_SUCCESS, payload: data.orders });\n  } catch (error) {\n    dispatch({\n      type: ALL_ORDERS_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Update Order\nexport const updateOrder = (id, status) => async (dispatch) => {\n  try {\n    dispatch({ type: UPDATE_ORDER_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const { data } = await axios.post(\n      `/api/v1/admin/order/${id}`,\n      {status},\n      config\n    );\n\n    dispatch({ type: UPDATE_ORDER_SUCCESS, payload: data.success });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_ORDER_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Delete Order\nexport const deleteOrder = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: DELETE_ORDER_REQUEST });\n\n    const { data } = await axios.delete(`/api/v1/admin/order/${id}`);\n\n    dispatch({ type: DELETE_ORDER_SUCCESS, payload: data.success });\n  } catch (error) {\n    dispatch({\n      type: DELETE_ORDER_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Get Order Details\nexport const getOrderDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: ORDER_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/v1/order/${id}`);\n\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data.order });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Clearing Errors\nexport const clearErrors = () => async (dispatch) => {\n  dispatch({ type: CLEAR_ERRORS });\n};\n","import React, { Fragment } from \"react\";\nimport { Typography, Stepper, StepLabel, Step } from \"@material-ui/core\";\nimport LocalShippingIcon from \"@material-ui/icons/LocalShipping\";\nimport LibraryAddCheckIcon from \"@material-ui/icons/LibraryAddCheck\";\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\nimport \"./CheckoutSteps.css\";\n\nconst CheckoutSteps = ({ activeStep }) => {\n  const steps = [\n    {\n      label: <Typography>Shipping Details</Typography>,\n      icon: <LocalShippingIcon />,\n    },\n    {\n      label: <Typography>Confirm Order</Typography>,\n      icon: <LibraryAddCheckIcon />,\n    },\n    {\n      label: <Typography>Payment</Typography>,\n      icon: <AccountBalanceIcon />,\n    },\n  ];\n\n  const stepStyles = {\n    boxSizing: \"border-box\",\n  };\n\n  return (\n    <Fragment>\n      <Stepper alternativeLabel activeStep={activeStep} style={stepStyles}>\n        {steps.map((item, index) => (\n          <Step\n            key={index}\n            active={activeStep === index ? true : false}\n            completed={activeStep >= index ? true : false}\n          >\n            <StepLabel\n              style={{\n                color: activeStep >= index ? \"tomato\" : \"rgba(0, 0, 0, 0.649)\",\n              }}\n              icon={item.icon}\n            >\n              {item.label}\n            </StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n    </Fragment>\n  );\n};\n\nexport default CheckoutSteps;\n","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\"\nimport { PayPalButtons } from \"@paypal/react-paypal-js\";\nimport { createDataBaseOrder } from \"../../actions/orderAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useAlert } from \"react-alert\";\nimport { BASE_URL } from \"../../globalUrl/Urls\";\n\nconst PaypalPayment = ({history}) =>  {\n  const alert = useAlert();\n  const dispatch = useDispatch()\n  const orderInfo = JSON.parse(sessionStorage.getItem(\"orderInfo\"));\n  const { shippingInfo, cartItems } = useSelector((state) => state.cart);\n\n  const createOrder= async(data) => {\n    // Order is created on the server and the order id is returned\n    return fetch(`/api/v1/orders`, {\n      method: \"POST\",\n       headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      // use the \"body\" param to optionally pass additional order information\n      // like product skus and quantities\n      body: JSON.stringify({\n        cart: [\n          {\n            amount: orderInfo?.subtotal,\n          },\n        ],\n      }),\n    })\n    .then((response) => response.json())\n    .then((order) => order.id);\n  }\n  const onApprove = async (data) => {\n     // Order is captured on the server\n     return fetch(`/api/v1/orders/${data.orderID}/capture`, {\n      method: \"POST\",\n       headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        orderID: data.orderID\n      })\n    })\n    .then((response) => response.json()).then(item => {\n      console.log(item, \"data56\")\n      try {\n            const Order = {\n              shippingInfo,\n              orderItems: cartItems,\n              itemsPrice: orderInfo.subtotal,\n              shippingPrice: orderInfo.shippingCharges,\n              totalPrice: orderInfo.totalPrice,\n            }\n            if (item?.status === \"COMPLETED\") {\n              Order.paymentInfo = {\n                id: item?.id,\n                status: item?.status,\n              };\n              dispatch(createDataBaseOrder(Order, history))\n           }} catch (error) {\n      alert.error(\"Something went wrong!\");\n    }\n    });\n  }\n    return (\n        <PayPalButtons  createOrder={(data, actions) => createOrder(data)}\n        onApprove={(data, actions) => onApprove(data)} style={{ layout: \"horizontal\" }} />\n    );\n}\n\nexport default PaypalPayment","import React, { Fragment} from \"react\";\nimport CheckoutSteps from \"../Cart/CheckoutSteps\";\n// import { PayPalButton } from 'react-paypal-button-v2'\nimport MetaData from \"../layout/MetaData\";\nimport { useAlert } from \"react-alert\";\nimport \"./payment.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createOrder } from \"../../actions/orderAction\";\nimport PaypalPayment from \"../Order/PaypalPayment\";\nconst Payment = ({ history }) => {\n  const orderInfo = JSON.parse(sessionStorage.getItem(\"orderInfo\"));\n  // const shippingInfo = JSON.parse(sessionStorage.getItem(\"shippingInfo\"));\n  const { shippingInfo, cartItems } = useSelector((state) => state.cart);\n  const alert = useAlert();\n  const dispatch = useDispatch()\n  // const SuccessHandler = (details, data) => {\n  //   try {\n  //     const Order = {\n  //       shippingInfo,\n  //       orderItems: cartItems,\n  //       itemsPrice: orderInfo.subtotal,\n  //       shippingPrice: orderInfo.shippingCharges,\n  //       totalPrice: orderInfo.totalPrice,\n  //     }\n  //     if (details.status === \"COMPLETED\") {\n  //       Order.paymentInfo = {\n  //         id: details.id,\n  //         status: details.status,\n  //       };\n\n  //       dispatch(createOrder(Order));\n  //       // // localStorage.removeItem(\"cartItems\")\n  //       // sessionStorage.removeItem(\"orderInfo\")\n  //       // localStorage.removeItem(\"shippingInfo\")\n  //       history.push(\"/success\");\n  //     } else {\n  //       alert.error(\"There's some issue while processing payment \");\n  //     }\n  //   } catch (error) {\n  //     alert.error(error.response.data.message);\n  //   }\n  // }\n  return (\n    <Fragment>\n      <MetaData title=\"Payment\" />\n      <CheckoutSteps activeStep={2} />\n      <div className=\"paymentContainer\">\n        <div className=\"\" style={{position:'static', height:'auto'}}>\n      <PaypalPayment history={history} />\n          {/* <PayPalButton\n            amount={orderInfo.totalPrice}\n            options={{\n              clientId:\n                \"AZW9WgswGTvvjDQ3zwxftBUTlXNIvz3f2YZrjRHxWxBJjhkoPDU8ybQF0TsPtN17PWtNuoqsIFdz-1Pj\"\n            }}\n            onSuccess={(details, data) => {\n              SuccessHandler(details, data)\n            }}\n\n          /> */}\n        </div>\n        {/* <form className=\"paymentForm\" onSubmit={(e) => submitHandler(e)}>\n          <Typography>Card Info</Typography>\n          <div>\n            <CreditCardIcon />\n            <CardNumberElement className=\"paymentInput\" />\n          </div>\n          <div>\n            <EventIcon />\n            <CardExpiryElement className=\"paymentInput\" />\n          </div>\n          <div>\n            <VpnKeyIcon />\n            <CardCvcElement className=\"paymentInput\" />\n          </div>\n\n          <input\n            type=\"submit\"\n            value={`Pay - $${orderInfo && orderInfo.totalPrice}`}\n            ref={payBtn}\n            className=\"paymentFormBtn\"\n          />\n        </form> */}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Payment;\n"],"sourceRoot":""}