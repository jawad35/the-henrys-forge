{"version":3,"sources":["component/layout/Loader/Loader.js","../node_modules/@material-ui/icons/LockOpen.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","component/User/LoginSignUp.js","Functions/CompressFile.js"],"names":["Loader","_jsx","className","children","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","createSvgIcon","Avatar","props","ref","alt","childrenProp","classes","_props$component","component","Component","imgProps","sizes","src","srcSet","_props$variant","variant","other","_objectWithoutProperties","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","_extends","img","Person","fallback","clsx","root","system","colorDefault","withStyles","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","color","palette","background","backgroundColor","type","grey","circle","circular","rounded","shape","square","textAlign","objectFit","textIndent","name","LoginSignUp","history","location","dispatch","useDispatch","alert","useAlert","error","loading","isAuthenticated","useSelector","state","user","loginTab","useRef","registerTab","switcherTab","loginEmail","setLoginEmail","useState","loginPassword","setLoginPassword","setUser","email","password","avatar","setAvatar","avatarPreview","setAvatarPreview","registerDataChange","e","target","CompressFile","file","files","size","async","handleImageUpload","event","imageFile","options","maxSizeMB","maxWidthOrHeight","useWebWorker","initialQuality","fileType","compressedFile","imageCompression","getDataUrlFromFile","then","res","console","log","base64","success","reader","FileReader","readyState","result","readAsDataURL","redirect","search","split","useEffect","clearErrors","push","switchTabs","tab","current","classList","add","remove","Fragment","_jsxs","onClick","onSubmit","preventDefault","login","MailOutlineIcon","placeholder","required","onChange","LockOpenIcon","Link","to","encType","myForm","FormData","set","register","FaceIcon","id","accept"],"mappings":"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","file":"static/js/42.27303da3.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Loader.css\";\n\nconst Loader = () => {\n  return (\n    <div className=\"loading\">\n      <div></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 17c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm6-9h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h1.9c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm0 12H6V10h12v10z\"\n}), 'LockOpen');\n\nexports.default = _default;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"circular\"`. */\n    circular: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circular' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: chainPropTypes(PropTypes.object, function (props) {\n    var classes = props.classes;\n\n    if (classes == null) {\n      return null;\n    }\n\n    if (classes.circle != null && // 2 classnames? one from withStyles the other must be custom\n    classes.circle.split(' ').length > 1) {\n      throw new Error(\"Material-UI: The `circle` class is deprecated. Use `circular` instead.\");\n    }\n\n    return null;\n  }),\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['circle', 'circular', 'rounded', 'square']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'circle') {\n      throw new Error('Material-UI: `variant=\"circle\"` is deprecated. Use `variant=\"circular\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import React, { Fragment, useRef, useState, useEffect } from \"react\";\nimport \"./LoginSignUp.css\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { Link } from \"react-router-dom\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearErrors, login, register } from \"../../actions/userAction\";\nimport { useAlert } from \"react-alert\";\nimport { CompressFile } from \"../../Functions/CompressFile\";\nimport { Avatar } from \"@material-ui/core\";\n\nconst LoginSignUp = ({ history, location }) => {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const { error, loading, isAuthenticated } = useSelector(\n    (state) => state.user\n  );\n  const loginTab = useRef(null);\n  const registerTab = useRef(null);\n  const switcherTab = useRef(null);\n  const [loginEmail, setLoginEmail] = useState(\"\");\n  const [loginPassword, setLoginPassword] = useState(\"\");\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const { name, email, password } = user;\n  const [avatar, setAvatar] = useState(\"/Profile.png\");\n  const [avatarPreview, setAvatarPreview] = useState(\"/Profile.png\");\n  const loginSubmit = (e) => {\n    e.preventDefault();\n    dispatch(login(loginEmail, loginPassword));\n  };\n  const registerSubmit = (e) => {\n    e.preventDefault();\n    const myForm = new FormData();\n    myForm.set(\"name\", name);\n    myForm.set(\"email\", email);\n    myForm.set(\"password\", password);\n    myForm.set(\"avatar\", avatar);\n    dispatch(register(myForm));\n  }\n  const registerDataChange = (e) => {\n    if (e.target.name === \"avatar\") {\n      CompressFile(e, setAvatar, Avatar, alert)\n      const reader = new FileReader();\n      reader.onload = () => {\n        if (reader.readyState === 2) {\n          setAvatarPreview(reader.result);\n          setAvatar(reader.result);\n        }\n      };\n      reader.readAsDataURL(e.target.files[0]);\n    } else {\n      setUser({ ...user, [e.target.name]: e.target.value });\n    }\n  };\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/account\";\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n    if (isAuthenticated) {\n      history.push(redirect);\n    }\n  }, [dispatch, error, alert, history, isAuthenticated, redirect]);\n\n  const switchTabs = (e, tab) => {\n    if (tab === \"login\") {\n      switcherTab.current.classList.add(\"shiftToNeutral\");\n      switcherTab.current.classList.remove(\"shiftToRight\");\n\n      registerTab.current.classList.remove(\"shiftToNeutralForm\");\n      loginTab.current.classList.remove(\"shiftToLeft\");\n    }\n    if (tab === \"register\") {\n      switcherTab.current.classList.add(\"shiftToRight\");\n      switcherTab.current.classList.remove(\"shiftToNeutral\");\n\n      registerTab.current.classList.add(\"shiftToNeutralForm\");\n      loginTab.current.classList.add(\"shiftToLeft\");\n    }\n  };\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <div className=\"LoginSignUpContainer\">\n            <div className=\"LoginSignUpBox\">\n              <div>\n                <div className=\"login_signUp_toggle\">\n                  <p onClick={(e) => switchTabs(e, \"login\")}>LOGIN</p>\n                  <p onClick={(e) => switchTabs(e, \"register\")}>REGISTER</p>\n                </div>\n                <button ref={switcherTab}></button>\n              </div>\n              <form className=\"loginForm\" ref={loginTab} onSubmit={loginSubmit}>\n                <div className=\"loginEmail\">\n                  <MailOutlineIcon />\n                  <input\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    required\n                    value={loginEmail}\n                    onChange={(e) => setLoginEmail(e.target.value)}\n                  />\n                </div>\n                <div className=\"loginPassword\">\n                  <LockOpenIcon />\n                  <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    required\n                    value={loginPassword}\n                    onChange={(e) => setLoginPassword(e.target.value)}\n                  />\n                </div>\n                <Link to=\"/password/forgot\">Forget Password ?</Link>\n                <input type=\"submit\" value=\"Login\" className=\"loginBtn\" />\n              </form>\n              <form\n                className=\"signUpForm\"\n                ref={registerTab}\n                encType=\"multipart/form-data\"\n                onSubmit={registerSubmit}\n              >\n                <div className=\"signUpName\">\n                  <FaceIcon />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    required\n                    name=\"name\"\n                    value={name}\n                    onChange={registerDataChange}\n                  />\n                </div>\n                <div className=\"signUpEmail\">\n                  <MailOutlineIcon />\n                  <input\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    required\n                    name=\"email\"\n                    value={email}\n                    onChange={registerDataChange}\n                  />\n                </div>\n                <div className=\"signUpPassword\">\n                  <LockOpenIcon />\n                  <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    required\n                    name=\"password\"\n                    value={password}\n                    onChange={registerDataChange}\n                  />\n                </div>\n\n                <div id=\"registerImage\">\n                  <img src={avatarPreview} alt=\"Avatar Preview\" />\n                  <input\n                    type=\"file\"\n                    name=\"avatar\"\n                    accept=\"image/*\"\n                    onChange={registerDataChange}\n                  />\n                </div>\n                <input type=\"submit\" value=\"Register\" className=\"signUpBtn\" />\n              </form>\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default LoginSignUp;\n","import imageCompression from 'browser-image-compression'\n\nexport const CompressFile = (e, setAvatar, Avatar, alert) => {\n    const file = e.target.files[0]\n    if (file.type === 'image/jpeg' || file.type === 'image/png' || file.type === 'image/jpg' || file.type === 'image/bmp' || file.type === 'image/webp') {\n        if (file.type === 'image/png' || file.type === 'image/webp' || file.type === 'image/bmp') {\n            if (file.size > 90000) {\n                async function handleImageUpload(event) {\n                    const imageFile = event\n                    const options = {\n                        maxSizeMB: 1,\n                        maxWidthOrHeight: 1920,\n                        useWebWorker: true,\n                        initialQuality:0.7,\n                        fileType:'image/jpeg'\n                    }\n                    try {\n                        const compressedFile = await imageCompression(imageFile, options)\n                        imageCompression.getDataUrlFromFile(compressedFile).then(res => setAvatar(res))\n                    } catch (error) {\n                        console.log(error)\n                    }\n                }\n                handleImageUpload(file)\n            } else {\n                setAvatar({ ...Avatar, image: file.base64 })\n            }\n        } else {\n            setAvatar({ ...Avatar, image: file.base64 })\n        }\n    } else {\n        alert.success(\"only .jpeg,.jpg,.png, and .webp formats are allowed\")\n    }\n}"],"sourceRoot":""}