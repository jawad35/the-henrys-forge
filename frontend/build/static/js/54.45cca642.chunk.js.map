{"version":3,"sources":["actions/categoryAction.js","component/Route/ProtectedRoute.js"],"names":["createCategory","categoryData","async","config","headers","data","axios","post","dispatch","type","NEW_Category_SUCCESS","payload","error","NEW_Category_FAIL","response","message","getAdminCategories","get","Get_All_Categories_SUCCESS","Get_ALl_Categories_FAIL","deleteCategory","id","delete","DELETE_CATEGORY_SUCCESS","DELETE_CATEGORY_FAIL","ProtectedRoute","_ref","isAdmin","component","Component","rest","loading","isAuthenticated","user","useSelector","state","useDispatch","useEffect","_jsx","Fragment","children","Route","render","props","role","Redirect","to"],"mappings":"uGAAA,yIAYO,MAAMA,EAAkBC,GAAiBC,UAC5C,IAGE,MAAMC,EAAS,CACbC,QAAS,CAAE,eAAgB,sBAGvB,KAAEC,SAAeC,IAAMC,KAC3B,6BACAN,EACAE,GAGFK,EAAS,CACPC,KAAMC,IACNC,QAASN,GAEb,CAAE,MAAOO,GACPJ,EAAS,CACPC,KAAMI,IACNF,QAASC,EAAME,SAAST,KAAKU,SAEjC,GAISC,EAAqBA,IAAMd,UACpC,IAEE,MAAM,KAAEG,SAAeC,IAAMW,IAAI,4BACjCT,EAAS,CACPC,KAAMS,IACNP,QAASN,GAEb,CAAE,MAAOO,GACPJ,EAAS,CACPC,KAAMU,IACNR,QAASC,EAAME,SAAST,KAAKU,SAEjC,GAISK,EAAkBC,GAAOnB,UACpC,IACE,MAAM,KAAEG,SAAeC,IAAMgB,OAAO,0BAA0BD,KAC9Db,EAAS,CACPC,KAAMc,IACNZ,QAASN,GAEb,CAAE,MAAOO,GACPJ,EAAS,CACPC,KAAMe,IACNb,QAASC,EAAME,SAAST,KAAKU,SAEjC,E,mCCpEF,iDAkCeU,UA5BQC,IAAiD,IAAhD,QAAEC,EAASC,UAAWC,KAAcC,GAAMJ,EAChE,MAAM,QAAEK,EAAO,gBAAEC,EAAe,KAAEC,GAASC,aAAaC,GAAUA,EAAMF,OAClEzB,EAAW4B,cAIjB,OAHAC,qBAAU,KACR7B,EAASQ,cAAqB,GAC7B,CAACR,IAEF8B,cAACC,WAAQ,CAAAC,UACM,IAAZT,GACCO,cAACG,IAAK,IACAX,EACJY,OAASC,IACiB,IAApBX,IAIY,IAAZL,GAAkC,UAAdM,EAAKW,KAHpBN,cAACO,IAAQ,CAACC,GAAG,WAOfR,cAACT,EAAS,IAAKc,OAInB,C","file":"static/js/54.45cca642.chunk.js","sourcesContent":["import axios from \"axios\";\n\nimport {\n  NEW_Category_SUCCESS,\n  NEW_Category_FAIL,\n  Get_All_Categories_SUCCESS,\n  Get_ALl_Categories_FAIL,\n  DELETE_CATEGORY_FAIL,\n  DELETE_CATEGORY_SUCCESS,\n} from \"../constants/categoryConstants\";\nimport { BASE_URL } from \"../globalUrl/Urls\";\n// Create Category\nexport const createCategory = (categoryData) => async (dispatch) => {\n    try {\n      // dispatch({ type: NEW_Category_REQUEST });\n  \n      const config = {\n        headers: { \"Content-Type\": \"application/json\" },\n      };\n  \n      const { data } = await axios.post(\n        `/api/v1/admin/category/new`,\n        categoryData,\n        config\n      );\n  \n      dispatch({\n        type: NEW_Category_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: NEW_Category_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n  \n  // Get All Categories For Admin\nexport const getAdminCategories = () => async (dispatch) => {\n    try {\n      // dispatch({ type: Get_ALl_Categories_REQUEST });\n      const { data } = await axios.get(`/api/v1/admin/categories`);\n      dispatch({\n        type: Get_All_Categories_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: Get_ALl_Categories_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n\n  // Delete Category\nexport const deleteCategory = (id) => async (dispatch) => {\n  try {\n    const { data } = await axios.delete(`/api/v1/admin/category/${id}`);\n    dispatch({\n      type: DELETE_CATEGORY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_CATEGORY_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};","import React, { Fragment } from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { getAdminCategories } from \"../../actions/categoryAction\";\n\nconst ProtectedRoute = ({ isAdmin, component: Component, ...rest }) => {\n  const { loading, isAuthenticated, user } = useSelector((state) => state.user);\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(getAdminCategories())\n  }, [dispatch])\n  return (\n    <Fragment>\n      {loading === false && (\n        <Route\n          {...rest}\n          render={(props) => {\n            if (isAuthenticated === false) {\n              return <Redirect to=\"/login\" />;\n            }\n\n            if (isAdmin === true && user.role !== \"admin\") {\n              return <Redirect to=\"/login\" />;\n            }\n\n            return <Component {...props} />;\n          }}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default ProtectedRoute;\n"],"sourceRoot":""}