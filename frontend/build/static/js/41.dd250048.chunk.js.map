{"version":3,"sources":["component/layout/MetaData.js","actions/cartAction.js","component/Cart/CheckoutSteps.js","component/Cart/Shipping.js"],"names":["MetaData","title","addItemsToCart","id","quantity","dispatch","getState","a","axios","get","BASE_URL","data","type","ADD_TO_CART","payload","product","_id","name","price","image","images","url","stock","Stock","localStorage","setItem","JSON","stringify","cart","cartItems","removeItemsFromCart","REMOVE_CART_ITEM","saveShippingInfo","SAVE_SHIPPING_INFO","CheckoutSteps","activeStep","steps","label","icon","alternativeLabel","style","boxSizing","map","item","index","active","completed","color","Shipping","history","useDispatch","alert","useAlert","shippingInfo","useSelector","state","useState","address","setAddress","city","setCity","setState","country","setCountry","pinCode","setPinCode","phoneNo","setPhoneNo","isvalidPN","setIsValidPN","country_code","useEffect","fetch","then","res","json","response","console","log","catch","status","className","encType","onSubmit","e","preventDefault","error","push","placeholder","required","value","onChange","target","Country","getAllCountries","isoCode","State","getStatesOfCountry","defaultCountry","backgroundColor","PN","isValidPhoneNumber","undefined","disabled"],"mappings":"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","file":"static/js/41.dd250048.chunk.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\n\nconst MetaData = ({ title }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n  );\n};\n\nexport default MetaData;\n","import {\n  ADD_TO_CART,\n  REMOVE_CART_ITEM,\n  SAVE_SHIPPING_INFO,\n} from \"../constants/cartConstants\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../globalUrl/Urls\";\n\n// Add to Cart\nexport const addItemsToCart = (id, quantity) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/v1/product/${id}`);\n\n  dispatch({\n    type: ADD_TO_CART,\n    payload: {\n      product: data.product._id,\n      name: data.product.name,\n      price: data.product.price,\n      image: data.product.images[0].url,\n      stock: data.product.Stock,\n      quantity,\n    },\n  });\n\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\n// REMOVE FROM CART\nexport const removeItemsFromCart = (id) => async (dispatch, getState) => {\n  dispatch({\n    type: REMOVE_CART_ITEM,\n    payload: id,\n  });\n\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\n// SAVE SHIPPING INFO\nexport const saveShippingInfo = (data) => async (dispatch) => {\n  dispatch({\n    type: SAVE_SHIPPING_INFO,\n    payload: data,\n  });\n\n  localStorage.setItem(\"shippingInfo\", JSON.stringify(data));\n};\n","import React, { Fragment } from \"react\";\nimport { Typography, Stepper, StepLabel, Step } from \"@material-ui/core\";\nimport LocalShippingIcon from \"@material-ui/icons/LocalShipping\";\nimport LibraryAddCheckIcon from \"@material-ui/icons/LibraryAddCheck\";\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\nimport \"./CheckoutSteps.css\";\n\nconst CheckoutSteps = ({ activeStep }) => {\n  const steps = [\n    {\n      label: <Typography>Shipping Details</Typography>,\n      icon: <LocalShippingIcon />,\n    },\n    {\n      label: <Typography>Confirm Order</Typography>,\n      icon: <LibraryAddCheckIcon />,\n    },\n    {\n      label: <Typography>Payment</Typography>,\n      icon: <AccountBalanceIcon />,\n    },\n  ];\n\n  const stepStyles = {\n    boxSizing: \"border-box\",\n  };\n\n  return (\n    <Fragment>\n      <Stepper alternativeLabel activeStep={activeStep} style={stepStyles}>\n        {steps.map((item, index) => (\n          <Step\n            key={index}\n            active={activeStep === index ? true : false}\n            completed={activeStep >= index ? true : false}\n          >\n            <StepLabel\n              style={{\n                color: activeStep >= index ? \"tomato\" : \"rgba(0, 0, 0, 0.649)\",\n              }}\n              icon={item.icon}\n            >\n              {item.label}\n            </StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n    </Fragment>\n  );\n};\n\nexport default CheckoutSteps;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport \"./Shipping.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { saveShippingInfo } from \"../../actions/cartAction\";\nimport MetaData from \"../layout/MetaData\";\nimport PinDropIcon from \"@material-ui/icons/PinDrop\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport LocationCityIcon from \"@material-ui/icons/LocationCity\";\nimport PublicIcon from \"@material-ui/icons/Public\";\nimport TransferWithinAStationIcon from \"@material-ui/icons/TransferWithinAStation\";\nimport { Country, State } from \"country-state-city\";\nimport { useAlert } from \"react-alert\";\nimport CheckoutSteps from \"../Cart/CheckoutSteps\";\nimport 'react-phone-number-input/style.css'\nimport PhoneInput2, { isValidPhoneNumber, parsePhoneNumber } from 'react-phone-number-input'\nimport axios from \"axios\";\nconst Shipping = ({ history }) => {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const { shippingInfo } = useSelector((state) => state.cart);\n\n  const [address, setAddress] = useState(shippingInfo.address);\n  const [city, setCity] = useState(shippingInfo.city);\n  const [state, setState] = useState(shippingInfo.state);\n  const [country, setCountry] = useState(shippingInfo.country);\n  const [pinCode, setPinCode] = useState(shippingInfo.pinCode);\n  const [phoneNo, setPhoneNo] = useState(shippingInfo.phoneNo);\n  const [isvalidPN, setIsValidPN] = useState(false)\n  const [country_code, setCountrycode] = useState('')\n\n\n  const checkValidPhoneNumber = (PN) => {\n    if (PN) {\n        setPhoneNo(PN)\n        if (PN && isValidPhoneNumber(PN)) {\n            setIsValidPN(false)\n        } else {\n            setIsValidPN(true)\n        }\n    } else {\n        setPhoneNo(null)\n    }\n\n}\n  const shippingSubmit = (e) => {\n    e.preventDefault();\n\n    if (isvalidPN) {\n      alert.error(\"Please Enter a Valid Phone Number\");\n      return;\n    }\n    dispatch(\n      saveShippingInfo({ address, city, state, country, pinCode, phoneNo })\n    );\n    history.push(\"/order/confirm\");\n  };\n  const getGeoInfo = () => {\n    fetch('https://ipapi.co/json/')\n    .then( res => res.json())\n    .then(response => {\n     console.log(\"Country is : \", response);\n   })\n   .catch((data, status) => {\n     console.log('Request failed:', data);\n   });\n};\n  useEffect(() => {\n    getGeoInfo()\n  }, [])\n\n  console.log(country_code, 'kalk')\n\n  return (\n    <Fragment>\n      <MetaData title=\"Shipping Details\" />\n\n      <CheckoutSteps activeStep={0} />\n\n      <div className=\"shippingContainer\">\n        <div className=\"shippingBox\">\n          <h2 className=\"shippingHeading\">Shipping Details</h2>\n\n          <form\n            className=\"shippingForm\"\n            encType=\"multipart/form-data\"\n            onSubmit={shippingSubmit}\n          >\n            <div>\n              <HomeIcon />\n              <input\n                type=\"text\"\n                placeholder=\"Address\"\n                required\n                value={address}\n                onChange={(e) => setAddress(e.target.value)}\n              />\n            </div>\n\n            <div>\n              <LocationCityIcon />\n              <input\n                type=\"text\"\n                placeholder=\"City\"\n                required\n                value={city}\n                onChange={(e) => setCity(e.target.value)}\n              />\n            </div>\n\n            <div>\n              <PinDropIcon />\n              <input\n                type=\"number\"\n                placeholder=\"Pin Code\"\n                required\n                value={pinCode}\n                onChange={(e) => setPinCode(e.target.value)}\n              />\n            </div>\n\n          \n\n            <div>\n              <PublicIcon />\n\n              <select\n                required\n                value={country}\n                onChange={(e) => setCountry(e.target.value)}\n              >\n                <option value=\"\">Country</option>\n                {Country &&\n                  Country.getAllCountries().map((item) => (\n                    <option key={item.isoCode} value={item.isoCode}>\n                      {item.name}\n                    </option>\n                  ))}\n              </select>\n            </div>\n\n            {country && (\n              <div>\n                <TransferWithinAStationIcon />\n\n                <select\n                  required\n                  value={state}\n                  onChange={(e) => setState(e.target.value)}\n                >\n                  <option value=\"\">State</option>\n                  {State &&\n                    State.getStatesOfCountry(country).map((item) => (\n                      <option key={item.isoCode} value={item.isoCode}>\n                        {item.name}\n                      </option>\n                    ))}\n                </select>\n              </div>\n            )}\n              <div>\n              <PhoneInput2\n                                placeholder=\"Enter phone number\"\n                                value={phoneNo}\n                                defaultCountry={country_code}\n                                style={{ backgroundColor: 'white' }}\n                                onChange={(e) => checkValidPhoneNumber(e)}\n                                error={phoneNo ? (isValidPhoneNumber(phoneNo) ? undefined : 'Invalid phone number') : 'Phone number required'} />\n            </div>\n\n            <input\n              type=\"submit\"\n              value=\"Continue\"\n              className=\"shippingBtn\"\n              disabled={state ? false : true}\n            />\n          </form>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Shipping;\n"],"sourceRoot":""}