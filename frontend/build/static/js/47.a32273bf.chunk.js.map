{"version":3,"sources":["component/layout/MetaData.js","component/Cart/CheckoutSteps.js","component/Cart/ConfirmOrder.js"],"names":["MetaData","title","CheckoutSteps","activeStep","steps","label","icon","alternativeLabel","style","boxSizing","map","item","index","active","completed","color","ConfirmOrder","history","useSelector","state","cart","shippingInfo","cartItems","user","subtotal","reduce","acc","quantity","price","totalPrice","address","city","pinCode","country","className","name","phoneNo","src","image","alt","to","product","onClick","data","shippingCharges","sessionStorage","setItem","JSON","stringify","window","location","href"],"mappings":"uGAAA,yBAWeA,IARE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB,OACE,cAAC,IAAD,UACE,gCAAQA,Q,iCCNd,qHAmDeC,IA5CO,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACjBC,EAAQ,CACZ,CACEC,MAAO,cAAC,IAAD,+BACPC,KAAM,cAAC,IAAD,KAER,CACED,MAAO,cAAC,IAAD,4BACPC,KAAM,cAAC,IAAD,KAER,CACED,MAAO,cAAC,IAAD,sBACPC,KAAM,cAAC,IAAD,MAQV,OACE,cAAC,WAAD,UACE,cAAC,IAAD,CAASC,kBAAgB,EAACJ,WAAYA,EAAYK,MANnC,CACjBC,UAAW,cAKT,SACGL,EAAMM,KAAI,SAACC,EAAMC,GAAP,OACT,cAAC,IAAD,CAEEC,OAAQV,IAAeS,EACvBE,UAAWX,GAAcS,EAH3B,SAKE,cAAC,IAAD,CACEJ,MAAO,CACLO,MAAOZ,GAAcS,EAAQ,SAAW,wBAE1CN,KAAMK,EAAKL,KAJb,SAMGK,EAAKN,SAVHO,Y,6EChCjB,6EAqGeI,UA7FM,SAAC,GAAgB,EAAdC,QAAe,IACrC,EAAoCC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAAzDC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,UACdC,EAASL,aAAY,SAACC,GAAD,OAAWA,EAAMI,QAAtCA,KAEFC,EAAWF,EAAUG,QACzB,SAACC,EAAKf,GAAN,OAAee,EAAMf,EAAKgB,SAAWhB,EAAKiB,QAC1C,GAIIC,EAAaL,EADK,EAElBM,EAAO,UAAMT,EAAaS,QAAnB,aAA+BT,EAAaU,KAA5C,aAAqDV,EAAaF,MAAlE,aAA4EE,EAAaW,QAAzF,aAAqGX,EAAaY,SAc/H,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CAAUhC,MAAM,kBAChB,cAAC,IAAD,CAAeE,WAAY,IAC3B,sBAAK+B,UAAU,mBAAf,UACE,gCACE,sBAAKA,UAAU,sBAAf,UACE,cAAC,IAAD,4BACA,sBAAKA,UAAU,yBAAf,UACE,gCACE,sCACA,+BAAOX,EAAKY,UAEd,gCACE,uCACA,+BAAOd,EAAae,aAEtB,gCACE,yCACA,+BAAON,aAIb,sBAAKI,UAAU,mBAAf,UACE,cAAC,IAAD,+BACA,qBAAKA,UAAU,4BAAf,SACGZ,GACCA,EAAUZ,KAAI,SAACC,GAAD,OACZ,gCACE,qBAAK0B,IAAK1B,EAAK2B,MAAOC,IAAI,YAC1B,cAAC,IAAD,CAAMC,GAAE,mBAAc7B,EAAK8B,SAA3B,SACG9B,EAAKwB,OACA,IACR,iCACGxB,EAAKgB,SADR,OACsBhB,EAAKiB,MAD3B,KACoC,IAClC,kCAAKjB,EAAKiB,MAAQjB,EAAKgB,iBAPjBhB,EAAK8B,oBAezB,8BACE,sBAAKP,UAAU,eAAf,UACE,cAAC,IAAD,4BACA,8BACE,gCACE,0CACA,qCAAQV,UAIZ,sBAAKU,UAAU,oBAAf,UACE,4BACE,yCAEF,qCAAQL,QAGV,wBAAQa,QAxEO,WACvB,IAAMC,EAAO,CACXnB,WACAoB,gBAPoB,EAQpBf,cAGFgB,eAAeC,QAAQ,YAAaC,KAAKC,UAAUL,IAEnDM,OAAOC,SAASC,KAAO,oBA+Df","file":"static/js/47.a32273bf.chunk.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\n\nconst MetaData = ({ title }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n  );\n};\n\nexport default MetaData;\n","import React, { Fragment } from \"react\";\nimport { Typography, Stepper, StepLabel, Step } from \"@material-ui/core\";\nimport LocalShippingIcon from \"@material-ui/icons/LocalShipping\";\nimport LibraryAddCheckIcon from \"@material-ui/icons/LibraryAddCheck\";\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\nimport \"./CheckoutSteps.css\";\n\nconst CheckoutSteps = ({ activeStep }) => {\n  const steps = [\n    {\n      label: <Typography>Shipping Details</Typography>,\n      icon: <LocalShippingIcon />,\n    },\n    {\n      label: <Typography>Confirm Order</Typography>,\n      icon: <LibraryAddCheckIcon />,\n    },\n    {\n      label: <Typography>Payment</Typography>,\n      icon: <AccountBalanceIcon />,\n    },\n  ];\n\n  const stepStyles = {\n    boxSizing: \"border-box\",\n  };\n\n  return (\n    <Fragment>\n      <Stepper alternativeLabel activeStep={activeStep} style={stepStyles}>\n        {steps.map((item, index) => (\n          <Step\n            key={index}\n            active={activeStep === index ? true : false}\n            completed={activeStep >= index ? true : false}\n          >\n            <StepLabel\n              style={{\n                color: activeStep >= index ? \"tomato\" : \"rgba(0, 0, 0, 0.649)\",\n              }}\n              icon={item.icon}\n            >\n              {item.label}\n            </StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n    </Fragment>\n  );\n};\n\nexport default CheckoutSteps;\n","import React, { Fragment } from \"react\";\nimport CheckoutSteps from \"../Cart/CheckoutSteps\";\nimport { useSelector } from \"react-redux\";\nimport MetaData from \"../layout/MetaData\";\nimport \"./ConfirmOrder.css\";\nimport { Link } from \"react-router-dom\";\nimport { Typography } from \"@material-ui/core\";\n\nconst ConfirmOrder = ({ history }) => {\n  const { shippingInfo, cartItems } = useSelector((state) => state.cart);\n  const { user } = useSelector((state) => state.user);\n\n  const subtotal = cartItems.reduce(\n    (acc, item) => acc + item.quantity * item.price,\n    0\n  );\n\n  const shippingCharges = 0;\n  const totalPrice = subtotal + shippingCharges;\n  const address = `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.state}, ${shippingInfo.pinCode}, ${shippingInfo.country}`;\n\n  const proceedToPayment = () => {\n    const data = {\n      subtotal,\n      shippingCharges,\n      totalPrice,\n    };\n\n    sessionStorage.setItem(\"orderInfo\", JSON.stringify(data));\n    // history.push(\"\");\n    window.location.href = \"/process/payment\"\n  };\n\n  return (\n    <Fragment>\n      <MetaData title=\"Confirm Order\" />\n      <CheckoutSteps activeStep={1} />\n      <div className=\"confirmOrderPage\">\n        <div>\n          <div className=\"confirmshippingArea\">\n            <Typography>Shipping Info</Typography>\n            <div className=\"confirmshippingAreaBox\">\n              <div>\n                <p>Name:</p>\n                <span>{user.name}</span>\n              </div>\n              <div>\n                <p>Phone:</p>\n                <span>{shippingInfo.phoneNo}</span>\n              </div>\n              <div>\n                <p>Address:</p>\n                <span>{address}</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"confirmCartItems\">\n            <Typography>Your Cart Items:</Typography>\n            <div className=\"confirmCartItemsContainer\">\n              {cartItems &&\n                cartItems.map((item) => (\n                  <div key={item.product}>\n                    <img src={item.image} alt=\"Product\" />\n                    <Link to={`/product/${item.product}`}>\n                      {item.name}\n                    </Link>{\" \"}\n                    <span>\n                      {item.quantity} X ${item.price} ={\" \"}\n                      <b>${item.price * item.quantity}</b>\n                    </span>\n                  </div>\n                ))}\n            </div>\n          </div>\n        </div>\n        {/*  */}\n        <div>\n          <div className=\"orderSummary\">\n            <Typography>Order Summery</Typography>\n            <div>\n              <div>\n                <p>Subtotal:</p>\n                <span>${subtotal}</span>\n              </div>\n            </div>\n\n            <div className=\"orderSummaryTotal\">\n              <p>\n                <b>Total:</b>\n              </p>\n              <span>${totalPrice}</span>\n            </div>\n\n            <button onClick={proceedToPayment}>Proceed To Payment</button>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ConfirmOrder;\n"],"sourceRoot":""}