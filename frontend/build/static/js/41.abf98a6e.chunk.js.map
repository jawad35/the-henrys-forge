{"version":3,"sources":["component/layout/MetaData.js","actions/cartAction.js","component/Cart/CheckoutSteps.js","component/Cart/Shipping.js"],"names":["MetaData","_ref","title","_jsx","Helmet","children","addItemsToCart","id","quantity","async","dispatch","getState","data","axios","get","type","ADD_TO_CART","payload","product","_id","name","price","image","images","url","stock","Stock","localStorage","setItem","JSON","stringify","cart","cartItems","removeItemsFromCart","REMOVE_CART_ITEM","saveShippingInfo","SAVE_SHIPPING_INFO","CheckoutSteps","activeStep","steps","label","Typography","icon","LocalShippingIcon","LibraryAddCheckIcon","AccountBalanceIcon","Fragment","Stepper","alternativeLabel","style","boxSizing","map","item","index","Step","active","completed","StepLabel","color","Shipping","history","useDispatch","alert","useAlert","shippingInfo","useSelector","state","address","setAddress","useState","city","setCity","setState","country","setCountry","pinCode","setPinCode","phoneNo","setPhoneNo","isvalidPN","setIsValidPN","country_code","setCountrycode","_jsxs","className","encType","onSubmit","e","preventDefault","error","push","HomeIcon","placeholder","required","value","onChange","target","LocationCityIcon","PinDropIcon","PublicIcon","Country","getAllCountries","isoCode","TransferWithinAStationIcon","State","getStatesOfCountry","PhoneInput2","defaultCountry","backgroundColor","PN","isValidPhoneNumber","undefined","disabled"],"mappings":"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","file":"static/js/41.abf98a6e.chunk.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\n\nconst MetaData = ({ title }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n  );\n};\n\nexport default MetaData;\n","import {\n  ADD_TO_CART,\n  REMOVE_CART_ITEM,\n  SAVE_SHIPPING_INFO,\n} from \"../constants/cartConstants\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../globalUrl/Urls\";\n\n// Add to Cart\nexport const addItemsToCart = (id, quantity) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/v1/product/${id}`);\n\n  dispatch({\n    type: ADD_TO_CART,\n    payload: {\n      product: data.product._id,\n      name: data.product.name,\n      price: data.product.price,\n      image: data.product.images[0].url,\n      stock: data.product.Stock,\n      quantity,\n    },\n  });\n\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\n// REMOVE FROM CART\nexport const removeItemsFromCart = (id) => async (dispatch, getState) => {\n  dispatch({\n    type: REMOVE_CART_ITEM,\n    payload: id,\n  });\n\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\n// SAVE SHIPPING INFO\nexport const saveShippingInfo = (data) => async (dispatch) => {\n  dispatch({\n    type: SAVE_SHIPPING_INFO,\n    payload: data,\n  });\n\n  localStorage.setItem(\"shippingInfo\", JSON.stringify(data));\n};\n","import React, { Fragment } from \"react\";\nimport { Typography, Stepper, StepLabel, Step } from \"@material-ui/core\";\nimport LocalShippingIcon from \"@material-ui/icons/LocalShipping\";\nimport LibraryAddCheckIcon from \"@material-ui/icons/LibraryAddCheck\";\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\nimport \"./CheckoutSteps.css\";\n\nconst CheckoutSteps = ({ activeStep }) => {\n  const steps = [\n    {\n      label: <Typography>Shipping Details</Typography>,\n      icon: <LocalShippingIcon />,\n    },\n    {\n      label: <Typography>Confirm Order</Typography>,\n      icon: <LibraryAddCheckIcon />,\n    },\n    {\n      label: <Typography>Payment</Typography>,\n      icon: <AccountBalanceIcon />,\n    },\n  ];\n\n  const stepStyles = {\n    boxSizing: \"border-box\",\n  };\n\n  return (\n    <Fragment>\n      <Stepper alternativeLabel activeStep={activeStep} style={stepStyles}>\n        {steps.map((item, index) => (\n          <Step\n            key={index}\n            active={activeStep === index ? true : false}\n            completed={activeStep >= index ? true : false}\n          >\n            <StepLabel\n              style={{\n                color: activeStep >= index ? \"tomato\" : \"rgba(0, 0, 0, 0.649)\",\n              }}\n              icon={item.icon}\n            >\n              {item.label}\n            </StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n    </Fragment>\n  );\n};\n\nexport default CheckoutSteps;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport \"./Shipping.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { saveShippingInfo } from \"../../actions/cartAction\";\nimport MetaData from \"../layout/MetaData\";\nimport PinDropIcon from \"@material-ui/icons/PinDrop\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport LocationCityIcon from \"@material-ui/icons/LocationCity\";\nimport PublicIcon from \"@material-ui/icons/Public\";\nimport TransferWithinAStationIcon from \"@material-ui/icons/TransferWithinAStation\";\nimport { Country, State } from \"country-state-city\";\nimport { useAlert } from \"react-alert\";\nimport CheckoutSteps from \"../Cart/CheckoutSteps\";\nimport 'react-phone-number-input/style.css'\nimport PhoneInput2, { isValidPhoneNumber, parsePhoneNumber } from 'react-phone-number-input'\nimport axios from \"axios\";\nconst Shipping = ({ history }) => {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const { shippingInfo } = useSelector((state) => state.cart);\n\n  const [address, setAddress] = useState(shippingInfo.address);\n  const [city, setCity] = useState(shippingInfo.city);\n  const [state, setState] = useState(shippingInfo.state);\n  const [country, setCountry] = useState(shippingInfo.country);\n  const [pinCode, setPinCode] = useState(shippingInfo.pinCode);\n  const [phoneNo, setPhoneNo] = useState(shippingInfo.phoneNo);\n  const [isvalidPN, setIsValidPN] = useState(false)\n  const [country_code, setCountrycode] = useState('US')\n\n\n  const checkValidPhoneNumber = (PN) => {\n    if (PN) {\n        setPhoneNo(PN)\n        if (PN && isValidPhoneNumber(PN)) {\n            setIsValidPN(false)\n        } else {\n            setIsValidPN(true)\n        }\n    } else {\n        setPhoneNo(null)\n    }\n\n}\n  const shippingSubmit = (e) => {\n    e.preventDefault();\n\n    if (isvalidPN) {\n      alert.error(\"Please Enter a Valid Phone Number\");\n      return;\n    }\n    dispatch(\n      saveShippingInfo({ address, city, state, country, pinCode, phoneNo })\n    );\n    history.push(\"/order/confirm\");\n  };\n  // const getGeoInfo = async () => {\n  //   try {\n  //     const response = await fetch('https://ipapi.co/json/', { mode: 'cors' });\n  \n  //     if (!response.ok) {\n  //       throw new Error(`HTTP error! status: ${response.status}`);\n  //     }\n  \n  //     const data = await response.json();\n  //     console.log(\"Country is : \", data);\n  //     setCountrycode(data.country_code);\n  //   } catch (error) {\n  //     console.log('Request failed:', error);\n  //     // Fallback to a default or allow the user to manually select\n  //     setCountrycode('US'); // Fallback to 'US' as a default, or handle appropriately\n  //   }\n  // };\n  \n  // useEffect(() => {\n  //   getGeoInfo()\n  // }, [])\n\n  // console.log(country_code, 'kalk')\n\n  return (\n    <Fragment>\n      <MetaData title=\"Shipping Details\" />\n\n      <CheckoutSteps activeStep={0} />\n\n      <div className=\"shippingContainer\">\n        <div className=\"shippingBox\">\n          <h2 className=\"shippingHeading\">Shipping Details</h2>\n\n          <form\n            className=\"shippingForm\"\n            encType=\"multipart/form-data\"\n            onSubmit={shippingSubmit}\n          >\n            <div>\n              <HomeIcon />\n              <input\n                type=\"text\"\n                placeholder=\"Address\"\n                required\n                value={address}\n                onChange={(e) => setAddress(e.target.value)}\n              />\n            </div>\n\n            <div>\n              <LocationCityIcon />\n              <input\n                type=\"text\"\n                placeholder=\"City\"\n                required\n                value={city}\n                onChange={(e) => setCity(e.target.value)}\n              />\n            </div>\n\n            <div>\n              <PinDropIcon />\n              <input\n                type=\"number\"\n                placeholder=\"Pin Code\"\n                required\n                value={pinCode}\n                onChange={(e) => setPinCode(e.target.value)}\n              />\n            </div>\n\n          \n\n            <div>\n              <PublicIcon />\n\n              <select\n                required\n                value={country}\n                onChange={(e) => setCountry(e.target.value)}\n              >\n                <option value=\"\">Country</option>\n                {Country &&\n                  Country.getAllCountries().map((item) => (\n                    <option key={item.isoCode} value={item.isoCode}>\n                      {item.name}\n                    </option>\n                  ))}\n              </select>\n            </div>\n\n            {country && (\n              <div>\n                <TransferWithinAStationIcon />\n\n                <select\n                  required\n                  value={state}\n                  onChange={(e) => setState(e.target.value)}\n                >\n                  <option value=\"\">State</option>\n                  {State &&\n                    State.getStatesOfCountry(country).map((item) => (\n                      <option key={item.isoCode} value={item.isoCode}>\n                        {item.name}\n                      </option>\n                    ))}\n                </select>\n              </div>\n            )}\n              <div>\n              <PhoneInput2\n                                placeholder=\"Enter phone number\"\n                                value={phoneNo}\n                                defaultCountry={country_code}\n                                style={{ backgroundColor: 'white' }}\n                                onChange={(e) => checkValidPhoneNumber(e)}\n                                error={phoneNo ? (isValidPhoneNumber(phoneNo) ? undefined : 'Invalid phone number') : 'Phone number required'} />\n            </div>\n\n            <input\n              type=\"submit\"\n              value=\"Continue\"\n              className=\"shippingBtn\"\n              disabled={state ? false : true}\n            />\n          </form>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Shipping;\n"],"sourceRoot":""}