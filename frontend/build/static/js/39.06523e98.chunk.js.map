{"version":3,"sources":["component/layout/MetaData.js","component/layout/Loader/Loader.js","actions/orderAction.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","component/Order/OrderDetails.js"],"names":["MetaData","title","Loader","className","createDataBaseOrder","order","history","dispatch","a","type","CREATE_ORDER_REQUEST","config","headers","axios","post","data","success","REMOVE_CART_ITEMS","push","CREATE_ORDER_SUCCESS","payload","CREATE_ORDER_FAIL","response","message","myOrders","MY_ORDERS_REQUEST","get","MY_ORDERS_SUCCESS","orders","MY_ORDERS_FAIL","getAllOrders","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","updateOrder","id","status","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_FAIL","deleteOrder","DELETE_ORDER_REQUEST","delete","DELETE_ORDER_SUCCESS","DELETE_ORDER_FAIL","getOrderDetails","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","clearErrors","CLEAR_ERRORS","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","React","props","ref","_props$align","align","classes","_props$color","color","component","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","other","_objectWithoutProperties","Component","_extends","clsx","root","concat","capitalize","withStyles","theme","margin","typography","caption","button","overline","srOnly","position","height","width","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","name","OrderDetails","match","useSelector","state","orderDetails","loading","useDispatch","alert","useAlert","useEffect","params","_id","user","shippingInfo","phoneNo","address","city","pinCode","country","paymentInfo","totalPrice","orderStatus","orderItems","map","item","src","image","alt","to","product","quantity","price"],"mappings":"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","file":"static/js/39.06523e98.chunk.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\n\nconst MetaData = ({ title }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n  );\n};\n\nexport default MetaData;\n","import React from \"react\";\nimport \"./Loader.css\";\n\nconst Loader = () => {\n  return (\n    <div className=\"loading\">\n      <div></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import { REMOVE_CART_ITEMS } from \"../constants/cartConstants\";\nimport {\n  CREATE_ORDER_REQUEST,\n  CREATE_ORDER_SUCCESS,\n  CREATE_ORDER_FAIL,\n  MY_ORDERS_REQUEST,\n  MY_ORDERS_SUCCESS,\n  MY_ORDERS_FAIL,\n  ALL_ORDERS_REQUEST,\n  ALL_ORDERS_SUCCESS,\n  ALL_ORDERS_FAIL,\n  UPDATE_ORDER_REQUEST,\n  UPDATE_ORDER_SUCCESS,\n  UPDATE_ORDER_FAIL,\n  DELETE_ORDER_REQUEST,\n  DELETE_ORDER_SUCCESS,\n  DELETE_ORDER_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  CLEAR_ERRORS,\n} from \"../constants/orderConstants\";\n\nimport axios from \"axios\";\nimport { BASE_URL } from \"../globalUrl/Urls\";\n\n// Create Order\nexport const createDataBaseOrder = (order, history) => async (dispatch) => {\n  try {\n    dispatch({ type: CREATE_ORDER_REQUEST });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const { data } = await axios.post(`/api/v1/order/new`, order, config);\n    if (data?.success) {\n      dispatch({\n        type: REMOVE_CART_ITEMS,\n        data: [],\n      });\n      history.push(\"/success\")\n    }\n\n    dispatch({ type: CREATE_ORDER_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: CREATE_ORDER_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// My Orders\nexport const myOrders = () => async (dispatch) => {\n  try {\n    dispatch({ type: MY_ORDERS_REQUEST });\n\n    const { data } = await axios.get(`/api/v1/orders/me`);\n\n    dispatch({ type: MY_ORDERS_SUCCESS, payload: data.orders });\n  } catch (error) {\n    dispatch({\n      type: MY_ORDERS_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Get All Orders (admin)\nexport const getAllOrders = () => async (dispatch) => {\n  try {\n    dispatch({ type: ALL_ORDERS_REQUEST });\n\n    const { data } = await axios.get(`/api/v1/admin/orders`);\n\n    dispatch({ type: ALL_ORDERS_SUCCESS, payload: data.orders });\n  } catch (error) {\n    dispatch({\n      type: ALL_ORDERS_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Update Order\nexport const updateOrder = (id, status) => async (dispatch) => {\n  try {\n    dispatch({ type: UPDATE_ORDER_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const { data } = await axios.post(\n      `/api/v1/admin/order/${id}`,\n      {status},\n      config\n    );\n\n    dispatch({ type: UPDATE_ORDER_SUCCESS, payload: data.success });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_ORDER_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Delete Order\nexport const deleteOrder = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: DELETE_ORDER_REQUEST });\n\n    const { data } = await axios.delete(`/api/v1/admin/order/${id}`);\n\n    dispatch({ type: DELETE_ORDER_SUCCESS, payload: data.success });\n  } catch (error) {\n    dispatch({\n      type: DELETE_ORDER_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Get Order Details\nexport const getOrderDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: ORDER_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/v1/order/${id}`);\n\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data.order });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Clearing Errors\nexport const clearErrors = () => async (dispatch) => {\n  dispatch({ type: CLEAR_ERRORS });\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import React, { Fragment, useEffect } from \"react\";\nimport \"./orderDetails.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport MetaData from \"../layout/MetaData\";\nimport { Link } from \"react-router-dom\";\nimport { Typography } from \"@material-ui/core\";\nimport { getOrderDetails, clearErrors } from \"../../actions/orderAction\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { useAlert } from \"react-alert\";\n\nconst OrderDetails = ({ match }) => {\n  const { order, error, loading } = useSelector((state) => state.orderDetails);\n\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    dispatch(getOrderDetails(match.params.id));\n  }, [dispatch, alert, error, match.params.id]);\n  return (\n    <Fragment>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <MetaData title=\"Order Details\" />\n          <div className=\"orderDetailsPage\">\n            <div className=\"orderDetailsContainer\">\n              <Typography component=\"h1\">\n                Order #{order && order._id}\n              </Typography>\n              <Typography>Shipping Info</Typography>\n              <div className=\"orderDetailsContainerBox\">\n                <div>\n                  <p>Name:</p>\n                  <span>{order.user && order.user.name}</span>\n                </div>\n                <div>\n                  <p>Phone:</p>\n                  <span>\n                    {order.shippingInfo && order.shippingInfo.phoneNo}\n                  </span>\n                </div>\n                <div>\n                  <p>Address:</p>\n                  <span>\n                    {order.shippingInfo &&\n                      `${order.shippingInfo.address}, ${order.shippingInfo.city}, ${order.shippingInfo.state}, ${order.shippingInfo.pinCode}, ${order.shippingInfo.country}`}\n                  </span>\n                </div>\n              </div>\n              <Typography>Payment</Typography>\n              <div className=\"orderDetailsContainerBox\">\n                <div>\n                  <p\n                    className={\n                      order.paymentInfo &&\n                      order.paymentInfo.status === \"COMPLETED\"\n                        ? \"greenColor\"\n                        : \"redColor\"\n                    }\n                  >\n                    {order.paymentInfo &&\n                    order.paymentInfo.status === \"COMPLETED\"\n                      ? \"PAID\"\n                      : \"NOT PAID\"}\n                  </p>\n                </div>\n\n                <div>\n                  <p>Amount:</p>\n                  <span>{order.totalPrice && order.totalPrice}</span>\n                </div>\n              </div>\n\n              <Typography>Order Status</Typography>\n              <div className=\"orderDetailsContainerBox\">\n                <div>\n                  <p\n                    className={\n                      order.orderStatus && order.orderStatus === \"Delivered\"\n                        ? \"greenColor\"\n                        : \"redColor\"\n                    }\n                  >\n                    {order.orderStatus && order.orderStatus}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"orderDetailsCartItems\">\n              <Typography>Order Items:</Typography>\n              <div className=\"orderDetailsCartItemsContainer\">\n                {order.orderItems &&\n                  order.orderItems.map((item) => (\n                    <div key={item.product}>\n                      <img src={item.image} alt=\"Product\" />\n                      <Link to={`/product/${item.product}`}>\n                        {item.name}\n                      </Link>{\" \"}\n                      <span>\n                        {item.quantity} X ${item.price} ={\" \"}\n                        <b>${item.price * item.quantity}</b>\n                      </span>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default OrderDetails;\n"],"sourceRoot":""}