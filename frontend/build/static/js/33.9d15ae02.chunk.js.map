{"version":3,"sources":["component/layout/MetaData.js","component/layout/Loader/Loader.js","actions/productAction.js","actions/bannerAction.js","component/Home/ProductCard.js","component/Product/Products.js"],"names":["MetaData","_ref","title","_jsx","Helmet","children","Loader","className","getAdminProduct","async","dispatch","type","ADMIN_PRODUCT_REQUEST","data","axios","get","ADMIN_PRODUCT_SUCCESS","payload","products","error","ADMIN_PRODUCT_FAIL","response","message","createProduct","productData","NEW_PRODUCT_REQUEST","config","headers","post","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_FAIL","updateProduct","id","UPDATE_PRODUCT_REQUEST","put","UPDATE_PRODUCT_SUCCESS","success","UPDATE_PRODUCT_FAIL","deleteProduct","DELETE_PRODUCT_REQUEST","delete","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAIL","getProductDetails","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_IMAGE_REFRESH","PRODUCT_DETAILS_SUCCESS","product","PRODUCT_DETAILS_FAIL","newReview","reviewData","NEW_REVIEW_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_FAIL","getAllReviews","ALL_REVIEW_REQUEST","ALL_REVIEW_SUCCESS","reviews","ALL_REVIEW_FAIL","deleteReviews","reviewId","productId","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_FAIL","clearErrors","CLEAR_ERRORS","createBanner","ADMIN_BANNER_REQUEST","ADMIN_BANNER_SUCCESS","ADMIN_BANNER_FAIL","GetBanner","ADMIN_BANNER_GET_SUCCESS","updateBanner","bannerData","ADMIN_BANNER_UPDATE_SUCCESS","ADMIN_BANNER_UPDATE_RESET","ProductCard","options","value","ratings","readOnly","precision","_jsxs","Link","to","_id","style","objectFit","boxShadow","borderRadius","src","images","url","alt","name","textTransform","length","slice","Rating","numOfReviews","price","Products","_banner$","_banner$$images$","match","useDispatch","keyword","useParams","alert","useAlert","categories","useSelector","state","loadingb","banner","currentPage","setCurrentPage","useState","setPrice","category","setCategory","setRatings","search","setSearch","setProducts","AllProducts","setAllProdcuts","perPageItems","count","setCount","loading","setLoading","handleQuery","rat","pri","cat","newSearch","queryProducts","filter","pro","moment","isBetween","toLowerCase","includes","start","end","currentProducts","useEffect","then","res","catch","err","console","log","Fragment","overflow","background","onChange","e","target","map","cate","Typography","Slider","newPrice","valueLabelDisplay","min","max","component","newRating","placeholder","Pagination","activePage","itemsCountPerPage","totalItemsCount","nextPageText","prevPageText","firstPageText","lastPageText","itemClass","linkClass","activeClass","activeLinkClass"],"mappings":"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","file":"static/js/33.9d15ae02.chunk.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\n\nconst MetaData = ({ title }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n  );\n};\n\nexport default MetaData;\n","import React from \"react\";\nimport \"./Loader.css\";\n\nconst Loader = () => {\n  return (\n    <div className=\"loading\">\n      <div></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import axios from \"axios\";\n\nimport {\n  ALL_PRODUCT_FAIL,\n  ALL_PRODUCT_REQUEST,\n  ALL_PRODUCT_SUCCESS,\n  ADMIN_PRODUCT_REQUEST,\n  ADMIN_PRODUCT_SUCCESS,\n  ADMIN_PRODUCT_FAIL,\n  NEW_PRODUCT_REQUEST,\n  NEW_PRODUCT_SUCCESS,\n  NEW_PRODUCT_FAIL,\n  UPDATE_PRODUCT_REQUEST,\n  UPDATE_PRODUCT_SUCCESS,\n  UPDATE_PRODUCT_FAIL,\n  DELETE_PRODUCT_REQUEST,\n  DELETE_PRODUCT_SUCCESS,\n  DELETE_PRODUCT_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_SUCCESS,\n  NEW_REVIEW_REQUEST,\n  NEW_REVIEW_SUCCESS,\n  NEW_REVIEW_FAIL,\n  ALL_REVIEW_REQUEST,\n  ALL_REVIEW_SUCCESS,\n  ALL_REVIEW_FAIL,\n  DELETE_REVIEW_REQUEST,\n  DELETE_REVIEW_SUCCESS,\n  DELETE_REVIEW_FAIL,\n  CLEAR_ERRORS,\n  PRODUCT_DETAILS_IMAGE_REFRESH,\n} from \"../constants/productConstants\";\nimport { BASE_URL } from \"../globalUrl/Urls\";\n\n// Get All Products\nexport const getProduct = () =>\n  async (dispatch) => {\n    try {\n      dispatch({ type: ALL_PRODUCT_REQUEST });\n      let link = `/api/v1/products`;\n\n      const { data } = await axios.get(link);\n      dispatch({\n        type: ALL_PRODUCT_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: ALL_PRODUCT_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n\n// Get All Products For Admin\nexport const getAdminProduct = () => async (dispatch) => {\n  try {\n    dispatch({ type: ADMIN_PRODUCT_REQUEST });\n\n    const { data } = await axios.get(`/api/v1/admin/products`);\n\n    dispatch({\n      type: ADMIN_PRODUCT_SUCCESS,\n      payload: data.products,\n    });\n  } catch (error) {\n    dispatch({\n      type: ADMIN_PRODUCT_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n// Create Product\nexport const createProduct = (productData) => async (dispatch) => {\n  try {\n    dispatch({ type: NEW_PRODUCT_REQUEST});\n\n    const config = {\n      headers: { \n        \"Content-Type\": `multipart/form-data`,\n      },\n    };\n\n    const { data } = await axios.post(\n      `/api/v1/admin/product/new`,\n      productData,\n      config\n    );\n    dispatch({\n      type: NEW_PRODUCT_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_PRODUCT_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Update Product\nexport const updateProduct = (id, productData) => async (dispatch) => {\n  try {\n    dispatch({ type: UPDATE_PRODUCT_REQUEST });\n\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n\n    const { data } = await axios.put(\n      `/api/v1/admin/product/${id}`,\n      productData,\n      config\n    );\n\n    dispatch({\n      type: UPDATE_PRODUCT_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PRODUCT_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Delete Product\nexport const deleteProduct = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: DELETE_PRODUCT_REQUEST });\n    const { data } = await axios.delete(`/api/v1/admin/product/${id}`);\n    dispatch({\n      type: DELETE_PRODUCT_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_PRODUCT_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Get Products Details\nexport const getProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n    dispatch({type: PRODUCT_DETAILS_IMAGE_REFRESH})\n    const { data } = await axios.get(`/api/v1/product/${id}`);\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data.product,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// NEW REVIEW\nexport const newReview = (reviewData) => async (dispatch) => {\n  try {\n    dispatch({ type: NEW_REVIEW_REQUEST });\n\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n\n    const { data } = await axios.put(`/api/v1/review`, reviewData, config);\n\n    dispatch({\n      type: NEW_REVIEW_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_REVIEW_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Get All Reviews of a Product\nexport const getAllReviews = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: ALL_REVIEW_REQUEST });\n\n    const { data } = await axios.get(`/api/v1/reviews?id=${id}`);\n\n    dispatch({\n      type: ALL_REVIEW_SUCCESS,\n      payload: data.reviews,\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_REVIEW_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Delete Review of a Product\nexport const deleteReviews = (reviewId, productId) => async (dispatch) => {\n  try {\n    dispatch({ type: DELETE_REVIEW_REQUEST });\n\n    const { data } = await axios.delete(\n      `/api/v1/reviews?id=${reviewId}&productId=${productId}`\n    );\n\n    dispatch({\n      type: DELETE_REVIEW_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_REVIEW_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Clearing Errors\nexport const clearErrors = () => async (dispatch) => {\n  dispatch({ type: CLEAR_ERRORS });\n};\n","import axios from \"axios\";\nimport { ADMIN_BANNER_FAIL, ADMIN_BANNER_GET_SUCCESS, ADMIN_BANNER_REQUEST, ADMIN_BANNER_SUCCESS, ADMIN_BANNER_UPDATE_RESET, ADMIN_BANNER_UPDATE_SUCCESS } from \"../constants/bannerConstants\";\nimport { BASE_URL } from \"../globalUrl/Urls\";\n// Create Banner\nexport const createBanner = (productData) => async (dispatch) => {\n    try {\n      dispatch({ type: ADMIN_BANNER_REQUEST });\n  \n      const config = {\n        headers: { \"Content-Type\": \"application/json\" },\n      };\n  \n      const { data } = await axios.post(\n        `/api/v1/admin/banner/new`,\n        productData,\n        config\n      );\n  \n      dispatch({\n        type: ADMIN_BANNER_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: ADMIN_BANNER_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n\n  export const GetBanner = () => async (dispatch) => {\n    try {\n      dispatch({ type: ADMIN_BANNER_REQUEST });\n  \n      const config = {\n        headers: { \"Content-Type\": \"application/json\" },\n      };\n  \n      const { data } = await axios.get(\n        `/api/v1/admin/banner`,\n        config\n      );\n  \n      dispatch({\n        type: ADMIN_BANNER_GET_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: ADMIN_BANNER_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n\n  export const updateBanner = (bannerData) => async (dispatch) => {\n    try {\n      dispatch({ type: ADMIN_BANNER_REQUEST });\n  \n      const config = {\n        headers: { \"Content-Type\": \"application/json\" },\n      };\n  \n      const { data } = await axios.post(\n        `/api/v1/admin/updatebanner`,\n        bannerData,\n        config\n      );\n      dispatch({\n        type: ADMIN_BANNER_UPDATE_SUCCESS,\n        payload: data,\n      });\n    dispatch({type:ADMIN_BANNER_UPDATE_RESET});\n    } catch (error) {\n      dispatch({\n        type: ADMIN_BANNER_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Rating } from \"@material-ui/lab\";\n\nconst ProductCard = ({ product }) => {\n  const options = {\n    value: product.ratings,\n    readOnly: true,\n    precision: 0.5,\n  };\n  return (\n    <Link className=\"productCard\" to={`/product/${product._id}`}>\n      <img style={{objectFit:'cover', boxShadow:\"5px 1px 10px gray\", borderRadius:'10px 10px 0px 0px'}} src={product.images[0].url} alt={product.name} />\n      <p style={{textTransform:'capitalize'}}>{product.name.length > 40 ?product.name.slice(0,40) +\"...read more\" :product.name}</p>\n      <div>\n        <Rating {...options} />\n        <p className=\"productCardSpan\">\n          ({product.numOfReviews} Reviews)\n        </p>\n      </div>\n      <span className=\"pro-price\">{`$${product.price}`}</span>\n    </Link>\n  );\n};\n\nexport default ProductCard;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport \"./Products.css\";\nimport '../Admin/productList.css'\nimport '../Home/Home.css'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { clearErrors } from \"../../actions/productAction\";\nimport Loader from \"../layout/Loader/Loader\";\nimport ProductCard from \"../Home/ProductCard\";\nimport Pagination from \"react-js-pagination\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { useAlert } from \"react-alert\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MetaData from \"../layout/MetaData\";\nimport axios from \"axios\";\nimport moment from 'moment'\nimport { useParams } from \"react-router-dom\";\nimport { GetBanner } from \"../../actions/bannerAction\";\nconst Products = ({ match }) => {\n  const dispatch = useDispatch();\n  const { keyword } = useParams()\n  const alert = useAlert();\n  const { categories } = useSelector((state) => state.categories);\n  const { loadingb,banner } = useSelector((state) => state.banner);\n\n  const {\n    error\n  } = useSelector((state) => state.products);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [price, setPrice] = useState([0, 5000]);\n  const [category, setCategory] = useState(\"\");\n  const [ratings, setRatings] = useState(0);\n  const [search, setSearch] = useState('');\n  const [Products, setProducts] = useState([]);\n  const [AllProducts, setAllProdcuts] = useState([]);\n  const [perPageItems,] = useState(20)\n  const [count, setCount] = useState(0)\n  const [loading, setLoading] = useState(true)\n  const handleQuery = (rat, pri, cat, newSearch) => {\n    setCategory(cat)\n    setPrice(pri)\n    setRatings(rat)\n    setSearch(newSearch)\n    const queryProducts = AllProducts.filter(pro => pro.ratings >= rat && moment(pro.price).isBetween(pri[0], pri[1]) && pro.category.toLowerCase().includes(cat.toLowerCase()) && (pro.name.toLowerCase().includes(newSearch.toLowerCase())))\n    if (rat === 0 && pri[0] === 0 && cat === '' && newSearch === '') {\n      const start = currentPage * perPageItems - perPageItems\n      const end = currentPage * perPageItems\n      const currentProducts = AllProducts.slice(start, end)\n      setCount(AllProducts.length)\n      setProducts(currentProducts)\n    } else {\n      setCount(queryProducts.length)\n      setProducts(queryProducts)\n    }\n  }\n  const setCurrentPageNo = (e) => {\n    setProducts(AllProducts.slice(e * perPageItems - perPageItems, e * perPageItems))\n    setCurrentPage(e);\n  };\n  useEffect(() => {\n    try {\n      dispatch(GetBanner())\n    } catch (error) {}\n  }, [dispatch])\n  const GetProducts = () => {\n    axios.get('/api/v1/products')\n      .then((res) => {\n        if (keyword) {\n          setProducts(res.data.products.filter(pro => pro.category === keyword).slice(0, perPageItems))\n          setCount(Products.length)\n          setCategory(keyword)\n        } else {\n          setProducts(res.data.products.slice(0, perPageItems))\n          setCount(res.data.products.length)\n          setCategory(\"\")\n        }\n        setAllProdcuts(res.data.products)\n        setLoading(false)\n      })\n      .catch((err) => {\n        console.log(\"AXIOS ERROR: \", err)\n      })\n  }\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n    // dispatch(getProduct());\n    GetProducts()\n    setCategory(\"axe\")\n  }, [dispatch, alert, error]);\n  \n  return (\n    <Fragment>\n      {loading ? (\n        <Loader />\n      ) : (\n        <div style={{overflow:'hidden'}}>\n          <MetaData title=\"PRODUCTS -- the henrys forge\" />\n          <div className=\"banner\">\n            {\n              loadingb ? <Loader/> : <img src={banner[0]?.images[0]?.url} alt=\"Banner\"/>\n            }\n          </div>\n          <div className=\"cateSearchBox\" style={{ background: 'white' }}>\n\n            {/* <input className=\"searchbtn\" type=\"button\" value=\"Search\" onClick={() => filteredListProduct()}/> */}\n            <div className=\"filterFields\">\n              <select\n                value={category}\n                onChange={(e) => handleQuery(ratings, price, e.target.value, search)}\n                className=\"categoryBox\"\n                style={{ textTransform: 'capitalize' }}\n              >\n                <option style={{ textTransform: 'capitalize' }} value=\"\">All</option>\n                {categories.map((cate) => (\n                  <option style={{ textTransform: 'capitalize' }} key={cate._id} value={cate.name}>\n                    {cate.name}\n                  </option>\n                ))}\n              </select>\n              <div className=\"sliderBox\">\n                <div className=\"price-slider\">\n                  <Typography>Price</Typography>\n                  <Slider\n                    value={price}\n                    onChange={(e, newPrice) => handleQuery(ratings, newPrice, category, search)}\n                    valueLabelDisplay=\"auto\"\n                    aria-labelledby=\"range-slider\"\n                    min={0}\n                    max={5000}\n                  />\n                </div>\n                <div className=\"rating-slider\">\n                  <Typography component=\"legend\">Ratings</Typography>\n                  <Slider\n                    value={ratings}\n                    onChange={(e, newRating) => {\n                      handleQuery(newRating, price, category, search)\n                    }}\n                    aria-labelledby=\"continuous-slider\"\n                    valueLabelDisplay=\"auto\"\n                    min={0}\n                    max={5}\n                  />\n                </div>\n              </div>\n            </div>\n            <input\n              type=\"text\"\n              className=\"searchInput\"\n              placeholder=\"Search Product...\"\n              onChange={(e) => handleQuery(ratings, price, category, e.target.value)}\n            />\n          </div>\n          <h2 className=\"productsHeading\">Products</h2>\n          <div className=\"products\">\n            {Products &&\n              Products.map((product) => (\n                <ProductCard key={product._id} product={product} />\n              ))}\n          </div>\n          {perPageItems <= count && (\n            <div className=\"paginationBox\">\n              <Pagination\n                activePage={currentPage}\n                itemsCountPerPage={perPageItems}\n                totalItemsCount={count}\n                onChange={setCurrentPageNo}\n                nextPageText=\"Next\"\n                prevPageText=\"Prev\"\n                firstPageText=\"1st\"\n                lastPageText=\"Last\"\n                itemClass=\"page-item\"\n                linkClass=\"page-link\"\n                activeClass=\"pageItemActive\"\n                activeLinkClass=\"pageLinkActive\"\n              />\n            </div>\n          )}\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Products;\n"],"sourceRoot":""}